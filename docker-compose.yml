version: '3.8'

services:
  meeting-agent:
    build: .
    container_name: meeting-transcript-agent
    restart: unless-stopped
    
    environment:
      # Required
      - OBSIDIAN_VAULT_PATH=/vault
      
      # Optional - provide via .env file
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - NOTIFICATION_CHANNELS=${NOTIFICATION_CHANNELS:-console,desktop}
      - RUN_ON_START=${RUN_ON_START:-false}
      - CUSTOM_SCHEDULE=${CUSTOM_SCHEDULE}
      - TZ=${TZ:-America/New_York}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Gmail MCP configuration
      - GMAIL_CLIENT_ID=${GMAIL_CLIENT_ID}
      - GMAIL_CLIENT_SECRET=${GMAIL_CLIENT_SECRET}
      
      # Slack webhook (optional)
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
    
    volumes:
      # Mount Obsidian vault
      - ${OBSIDIAN_VAULT_PATH}:/vault
      
      # Persist database and logs
      - ./data:/app/data
      - ./logs:/app/logs
      
      # Gmail credentials (created by MCP server)
      - ~/.mcp/gmail:/home/nodejs/.mcp/gmail:ro
    
    ports:
      - "3000:3000"  # Health check endpoint
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network for future services
    networks:
      - agent-network

  # Optional: Redis for caching (future enhancement)
  # redis:
  #   image: redis:alpine
  #   container_name: meeting-agent-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - agent-network

networks:
  agent-network:
    driver: bridge

volumes:
  redis-data: